// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// dummy1_cpp
Rcpp::List dummy1_cpp(Rcpp::List args);
RcppExport SEXP _bobfunctions2_dummy1_cpp(SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(dummy1_cpp(args));
    return rcpp_result_gen;
END_RCPP
}
// sim_wrightfisher_cpp
Rcpp::List sim_wrightfisher_cpp(Rcpp::List args, Rcpp::List args_functions, Rcpp::List args_progress);
RcppExport SEXP _bobfunctions2_sim_wrightfisher_cpp(SEXP argsSEXP, SEXP args_functionsSEXP, SEXP args_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type args(argsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type args_functions(args_functionsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type args_progress(args_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(sim_wrightfisher_cpp(args, args_functions, args_progress));
    return rcpp_result_gen;
END_RCPP
}
// box_blur_cpp
Rcpp::NumericMatrix box_blur_cpp(Rcpp::NumericMatrix m, int d);
RcppExport SEXP _bobfunctions2_box_blur_cpp(SEXP mSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(box_blur_cpp(m, d));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bobfunctions2_dummy1_cpp", (DL_FUNC) &_bobfunctions2_dummy1_cpp, 1},
    {"_bobfunctions2_sim_wrightfisher_cpp", (DL_FUNC) &_bobfunctions2_sim_wrightfisher_cpp, 3},
    {"_bobfunctions2_box_blur_cpp", (DL_FUNC) &_bobfunctions2_box_blur_cpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_bobfunctions2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
